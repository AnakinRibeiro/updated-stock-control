import type { Metadata } from "next";
import "./globals.css";

import localFont from "next/font/local";
import { Rubik } from "next/font/google";

import ReactQueryProvider from "@/lib/react-query-provider";

const rubik = Rubik({
  weight: ["300", "400", "500"],
  subsets: ["latin"],
  variable: "--font-rubik",
});

const sfProRegular = localFont({
  src: "../../public/fonts/SF-Pro-Display-Regular.otf",
  display: "swap",
  variable: "--font-sf-pro-regular",
});

const sfProMedium = localFont({
  src: "../../public/fonts/SF-Pro-Display-Medium.otf",
  display: "swap",
  variable: "--font-sf-pro-medium",
});

const coreSans = localFont({
  src: "../../public/fonts/CoreSansM65Bold.otf",
  display: "swap",
  variable: "--font-core-sans",
});

const din = localFont({
  src: "../../public/fonts/DINCondensed-Light.ttf",
  display: "swap",
  variable: "--font-din-light",
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html
      lang="en"
      className={`${sfProMedium.variable} ${sfProRegular.variable} ${coreSans.variable} ${din.variable} ${rubik.variable}`}
    >
      <body>
        <ReactQueryProvider>{children}</ReactQueryProvider>
      </body>
    </html>
  );
}
